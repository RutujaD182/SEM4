%macro print 2
mov rax,01
mov rdi,01
mov rsi,%1
mov rdx,%2
syscall
%endmacro

%macro read 2
mov rax,00
mov rdi,00
mov rsi,%1
mov rdx,%2
syscall
%endmacro

section .data
msg1: db "1.BCD->HEX",0xA
      db "2.HEX->BCD",0xA
      db "3.EXIT", 0xA
len1 equ $-msg1

section .bss
opt resb 06
val resb 10
result resb 40
cnt resb 01
cnt2 resb 01

section .txt
global _start
_start:

menu:
	print msg1,len1
	read opt,2

	cmp byte[opt],'1'
	je B_H

	cmp byte[opt],'2'
	je H_B
	

B_H :	
	read val,10
	xor rax,rax
	mov rsi,val
	mov rax,[val]
	mov rbx,10H
	mov rcx,5H
l1:	
	xor rdx,rdx
	mul rbx
	xor rdx,rdx
	mov dl,byte[rsi]
	sub dl,30H
	add rax,rdx
	inc rsi
	loop l1
	
	mov rsi,rax
	call HtoA
	call exit
H_B: 
	read val,10
	call AtoH
	
	mov ax,bx
	mov byte[cnt],00
	mov bx,10H
	
	
l2:	xor rdx,rdx	
	div bx
	push rdx
	inc byte[cnt]
	cmp ax,00
	jne l2
	mov rdi,result

l3:   	pop rdx
	add dl,30H
	mov qword[rdi],rdx
	inc rdi
	dec byte[cnt]
	jnz l3
	
	print result, 5

exit:
mov rax,60
mov rdi,60
syscall

HtoA:
	mov rdi, result
	mov byte[cnt2], 05	
	
up1:
	rol rdx, 04
	mov cl, dl
	AND cl, 0FH
	cmp cl, 09H
	jbe next1
	add cl, 07H
next1:
	add cl, 30H
	
	mov byte[rdi], cl
	inc rdi
	dec byte[cnt2]
	jnz up1
		
	print result,5

RET

AtoH:
	mov rsi,val
	mov byte[cnt2],4
	xor rbx,rbx
up2:  
	rol bx,4
	mov al,byte[rsi]
	cmp al,39H
	jbe next2
	sub al,07H
	
next2:
	sub al,30H
	add bx,ax
	inc rsi
	dec byte[cnt2]
	jnz up2
	
RET


